name: Continuous Deployment

# on:
#   release:
#     types: [created]
on: [push]

jobs:
  Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: recursive
    
    - name: Configure
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
      
    - name: Build
      run: cmake --build build --config Release

    - name: Zip
      run: |
          7z.exe a $ARCHIVE ^
          build\liblsdj\lsdj_mono\Release\lsdj-mono.exe
          7z.exe l $ARCHIVE
      env:
          ARCHIVE: liblsdj_windows_${{ github.event.release.tag_name }}.zip
 
  macOS:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: recursive
    
    - name: Configure
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
      
    - name: Build
      run: cmake --build build --config Release

    - name: Zip
      run: |
        zip -j $ARCHIVE \
        ./build/lsdsng_export/lsdsng-export \
        ./build/lsdsng_import/lsdsng-import \
        ./build/lsdj_mono/lsdj-mono \
        ./build/lsdj_wavetable_import/lsdj-wavetable-import
        unzip -l $ARCHIVE
      env:
          ARCHIVE: liblsdj_macos_${{ github.event.release.tag_name }}.zip
      
    - name: Upload
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: .
        asset_name: $ARCHIVE
        asset_content_type: binary/octet-stream
 
#   Ubuntu:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#       with:
#         lfs: true
#         submodules: recursive
    
#     - name: Configure
#       run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
      
#     - name: Build
#       run: cmake --build build --config Release

#     - name: Test
#       run: ./build/liblsdj/test/test
